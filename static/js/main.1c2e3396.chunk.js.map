{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","arguments","length","undefined","action","query","status","initialState","filterReducer","_objectSpread","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoItem","_ref","id","title","completed","dispatch","isSelected","_jsxs","className","cn","children","_jsx","onClick","currTodoActions","TodoList","_Fragment","map","TodoFilter","onQuerySet","value","filterActions","onSubmit","event","preventDefault","onChange","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","ok","Error","json","TodoModal","userId","_useState","useState","_useState2","_slicedToArray","userFromServer","setUserFromServer","_useState3","_useState4","isLoading","setIsLoading","useEffect","concat","getUser","finally","href","email","name","App","_useAppSelector","errorMessage","setErrorMessage","isSuccessfulyFetched","filteredTodos","useMemo","filtered","_toConsumableArray","toLowerCase","includes","_ref2","_ref3","resp","todosActions","catch","Root","Provider","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c2e3396.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\ntype RemoveAction = { type: 'currentTodo/REMOVE' };\n\ntype SetAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetAction | RemoveAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n    case 'currentTodo/REMOVE':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetQueryAction = {\n  type: 'filter/SET_QUERY';\n  payload: string;\n};\n\ntype ToggleStatusAction = {\n  type: 'filter/TOGGLE_STATUS';\n  payload: Status;\n};\n\nconst setQuery = (query: string): SetQueryAction => ({\n  type: 'filter/SET_QUERY',\n  payload: query,\n});\n\nconst toggleStatus = (status: Status): ToggleStatusAction => ({\n  type: 'filter/TOGGLE_STATUS',\n  payload: status,\n});\n\nexport const actions = { setQuery, toggleStatus };\n\ntype State = {\n  query: string;\n  status: Status;\n};\n\ntype Action = SetQueryAction | ToggleStatusAction;\n\nconst initialState: State = {\n  query: '',\n  status: 'all',\n};\n\nconst filterReducer = (\n  state: State = initialState,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'filter/SET_QUERY':\n      return {\n        ...state,\n        query: action.payload,\n      };\n    case 'filter/TOGGLE_STATUS':\n      return {\n        ...state,\n        status: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetAction = {\n  type: 'todos/SET';\n  payload: Todo[];\n};\n\nconst setTodos = (todos: Todo[]): SetAction => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\nexport const actions = { setTodos };\n\ntype State = Todo[];\ntype Action = SetAction;\n\nconst todosReducer = (\n  state: State = [],\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'todos/SET':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currTodoActions } from '../../features/currentTodo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const { id, title, completed } = todo;\n\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  const isSelected = currentTodo?.id === todo?.id;\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={cn({\n        'has-background-info-light': isSelected,\n      })}\n    >\n      <td className=\"is-vcentered\">\n        {id}\n      </td>\n      {\n        completed\n          ? (\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n          )\n          : (\n            <td className=\"is-vcentered\" />\n          )\n      }\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={cn({\n            'has-text-danger': !completed,\n            'has-text-success': completed,\n          })}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => dispatch(currTodoActions.setTodo(todo))}\n        >\n          <span className=\"icon\">\n            <i\n              className={cn('far', {\n                'fa-eye': !isSelected,\n                'fa-eye-slash': isSelected,\n              })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <>\n      {!todos.length ? (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      ) : (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {todos.map(todo => (\n              <TodoItem key={todo.id} todo={todo} />\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const { query } = useAppSelector(state => state.filter);\n  const dispatch = useAppDispatch();\n\n  const onStatusSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(filterActions.toggleStatus(event.target.value as Status));\n  };\n\n  const onQuerySet = (value: string) => {\n    dispatch(filterActions.setQuery(value));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={onStatusSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => onQuerySet(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onQuerySet('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => {\n      if (!res.ok) {\n        throw new Error('Unable to load data');\n      }\n\n      return res.json();\n    });\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { useAppDispatch } from '../../app/hooks';\nimport { actions as currTodoActions } from '../../features/currentTodo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    userId,\n    completed,\n  } = todo;\n\n  const dispatch = useAppDispatch();\n\n  const [userFromServer, setUserFromServer] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const onModalClose = () => {\n    dispatch(currTodoActions.removeTodo());\n  };\n\n  useEffect(() => {\n    getUser(userId)\n      .then(setUserFromServer)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onModalClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n\n              {' by '}\n\n              <a href={`mailto:${userFromServer?.email}`}>\n                {userFromServer?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { getTodos } from './api';\nimport { actions as todosActions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const {\n    todos,\n    filter,\n    currentTodo,\n  } = useAppSelector(state => state);\n  const { query, status } = filter;\n\n  const dispatch = useAppDispatch();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const isSuccessfulyFetched = !isLoading && !errorMessage;\n\n  const filteredTodos = useMemo(() => {\n    let filtered = [...todos];\n\n    if (query) {\n      filtered = filtered.filter(({ title }) => {\n        return title.toLowerCase().includes(query.toLowerCase());\n      });\n    }\n\n    switch (status) {\n      case 'completed':\n        filtered = filtered.filter(({ completed }) => completed);\n        break;\n      case 'active':\n        filtered = filtered.filter(({ completed }) => !completed);\n        break;\n      case 'all':\n      default:\n        break;\n    }\n\n    return filtered;\n  }, [todos, query, status]);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then(resp => dispatch(todosActions.setTodos(resp)))\n      .catch(() => setErrorMessage('Unable to load todos'))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n\n              {!isLoading && errorMessage && (\n                <p>{errorMessage}</p>\n              )}\n\n              {isSuccessfulyFetched && (\n                <TodoList todos={filteredTodos} />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal todo={currentTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}